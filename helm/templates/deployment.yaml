apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "algo-trading.fullname" . }}
  labels:
    {{- include "algo-trading.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "algo-trading.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "algo-trading.selectorLabels" . | nindent 8 }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "algo-trading.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_HOST
              value: {{ include "algo-trading.fullname" . }}-postgresql
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "algo-trading.fullname" . }}-secrets
                  key: postgresPassword
            - name: ZERODHA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "algo-trading.fullname" . }}-secrets
                  key: zerodhaApiKey
            - name: ZERODHA_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "algo-trading.fullname" . }}-secrets
                  key: zerodhaApiSecret
            - name: TELEGRAM_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "algo-trading.fullname" . }}-secrets
                  key: telegramBotToken
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "algo-trading.fullname" . }}-secrets
                  key: smtpPassword
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel }}
            - name: ENVIRONMENT
              value: {{ .Values.config.environment }}
            - name: TZ
              value: {{ .Values.config.timezone }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}